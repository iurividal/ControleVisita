//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 15/12/2020 11:27:42
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace OracleContext
{

    [DatabaseAttribute(Name = "CMC")]
    [ProviderAttribute(typeof(Devart.Data.Oracle.Linq.Provider.OracleDataProvider))]
    public partial class OracleDataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(OracleDataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertCNVISITAPESSOA(CNVISITAPESSOA instance);
        partial void UpdateCNVISITAPESSOA(CNVISITAPESSOA instance);
        partial void DeleteCNVISITAPESSOA(CNVISITAPESSOA instance);
        partial void InsertCNGRUPO(CNGRUPO instance);
        partial void UpdateCNGRUPO(CNGRUPO instance);
        partial void DeleteCNGRUPO(CNGRUPO instance);
        partial void InsertCNGRUPOSGEPESSOA(CNGRUPOSGEPESSOA instance);
        partial void UpdateCNGRUPOSGEPESSOA(CNGRUPOSGEPESSOA instance);
        partial void DeleteCNGRUPOSGEPESSOA(CNGRUPOSGEPESSOA instance);
        partial void InsertCIDADE(CIDADE instance);
        partial void UpdateCIDADE(CIDADE instance);
        partial void DeleteCIDADE(CIDADE instance);
        partial void InsertESTADO(ESTADO instance);
        partial void UpdateESTADO(ESTADO instance);
        partial void DeleteESTADO(ESTADO instance);
        partial void InsertCNAE(CNAE instance);
        partial void UpdateCNAE(CNAE instance);
        partial void DeleteCNAE(CNAE instance);
        partial void InsertWEBLOGIN(WEBLOGIN instance);
        partial void UpdateWEBLOGIN(WEBLOGIN instance);
        partial void DeleteWEBLOGIN(WEBLOGIN instance);
        partial void InsertCNVISITA(CNVISITA instance);
        partial void UpdateCNVISITA(CNVISITA instance);
        partial void DeleteCNVISITA(CNVISITA instance);
        partial void InsertCNPROFISSAO(CNPROFISSAO instance);
        partial void UpdateCNPROFISSAO(CNPROFISSAO instance);
        partial void DeleteCNPROFISSAO(CNPROFISSAO instance);

        #endregion

        public OracleDataContext() :
        base(@"User Id=cmc;Password=qHvgr32qSZHm26;Server=srv-oracle;Direct=True;Sid=orcl;Persist Security Info=True", mappingSource)
        {
            OnCreated();
        }

        public OracleDataContext(MappingSource mappingSource) :
        base(@"User Id=cmc;Password=qHvgr32qSZHm26;Server=srv-oracle;Direct=True;Sid=orcl;Persist Security Info=True", mappingSource)
        {
            OnCreated();
        }

        public OracleDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public OracleDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public OracleDataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public OracleDataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<CNVISITAPESSOA> CNVISITAPESSOAs
        {
            get
            {
                return this.GetTable<CNVISITAPESSOA>();
            }
        }

        public Devart.Data.Linq.Table<CNGRUPO> CNGRUPOs
        {
            get
            {
                return this.GetTable<CNGRUPO>();
            }
        }

        public Devart.Data.Linq.Table<CNGRUPOSGEPESSOA> CNGRUPOSGEPESSOAs
        {
            get
            {
                return this.GetTable<CNGRUPOSGEPESSOA>();
            }
        }

        public Devart.Data.Linq.Table<CIDADE> CIDADEs
        {
            get
            {
                return this.GetTable<CIDADE>();
            }
        }

        public Devart.Data.Linq.Table<ESTADO> ESTADOs
        {
            get
            {
                return this.GetTable<ESTADO>();
            }
        }

        public Devart.Data.Linq.Table<CNAE> CNAEs
        {
            get
            {
                return this.GetTable<CNAE>();
            }
        }

        public Devart.Data.Linq.Table<WEBLOGIN> WEBLOGINs
        {
            get
            {
                return this.GetTable<WEBLOGIN>();
            }
        }

        public Devart.Data.Linq.Table<CNVISITA> CNVISITAs
        {
            get
            {
                return this.GetTable<CNVISITA>();
            }
        }

        public Devart.Data.Linq.Table<CNPROFISSAO> CNPROFISSAOs
        {
            get
            {
                return this.GetTable<CNPROFISSAO>();
            }
        }

    
        /// <summary>
        /// There are no comments for FRESPONSAVELCOD in the schema.
        /// </summary>
        [Function(Name=@"PCK_UTIL_CONSORCIO.F_RESPONSAVEL_COD", IsComposable=true)]
        public System.Nullable<System.Decimal> FRESPONSAVELCOD([Parameter(Name="PSSEQREVENDA", DbType="NUMBER(8)")] System.Nullable<int> PSSEQREVENDA, [Parameter(Name="PNTIPOGRUPO", DbType="NUMBER")] System.Nullable<decimal> PNTIPOGRUPO, [Parameter(Name="PNROEMPRESA", DbType="NUMBER")] System.Nullable<decimal> PNROEMPRESA)
        {
            IExecuteResult _FRESPONSAVELCODResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), PSSEQREVENDA, PNTIPOGRUPO, PNROEMPRESA);
            return ((System.Nullable<System.Decimal>)(_FRESPONSAVELCODResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PCURSORVISITA in the schema.
        /// </summary>
        [Function(Name=@"P_CURSORVISITA")]
        public Devart.Data.Linq.ISingleResult<PCURSORVISITAResult> PCURSORVISITA([Parameter(Name="PNCODGRUPO", DbType="NUMBER")] System.Nullable<decimal> PNCODGRUPO, [Parameter(Name="PDDATAINICIAL", DbType="DATE")] System.Nullable<System.DateTime> PDDATAINICIAL, [Parameter(Name="PDDATAFINAL", DbType="DATE")] System.Nullable<System.DateTime> PDDATAFINAL)
        {
            IExecuteResult _PCURSORVISITAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), PNCODGRUPO, PDDATAINICIAL, PDDATAFINAL);
            return ((Devart.Data.Linq.ISingleResult<PCURSORVISITAResult>)(_PCURSORVISITAResult.ReturnValue));
        }
    }
}

namespace OracleContext
{

    /// <summary>
    /// There are no comments for OracleContext.CNVISITAPESSOA in the schema.
    /// </summary>
    [Table(Name = @"CN_VISITA_PESSOA")]
    public partial class CNVISITAPESSOA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDPESSOA;

        private string _DADOS;

        private System.Nullable<System.DateTime> _DTAINCLUSAO = DateTime.Now;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDPESSOAChanging(decimal value);
        partial void OnIDPESSOAChanged();
        partial void OnDADOSChanging(string value);
        partial void OnDADOSChanged();
        partial void OnDTAINCLUSAOChanging(System.Nullable<System.DateTime> value);
        partial void OnDTAINCLUSAOChanged();
        #endregion

        public CNVISITAPESSOA()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDPESSOA in the schema.
        /// </summary>
        [Column(Storage = "_IDPESSOA", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "NUMBER GENERATED AS IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public decimal IDPESSOA
        {
            get
            {
                return this._IDPESSOA;
            }
            set
            {
                if (this._IDPESSOA != value)
                {
                    this.OnIDPESSOAChanging(value);
                    this.SendPropertyChanging();
                    this._IDPESSOA = value;
                    this.SendPropertyChanged("IDPESSOA");
                    this.OnIDPESSOAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DADOS in the schema.
        /// </summary>
        [Column(Storage = "_DADOS", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string DADOS
        {
            get
            {
                return this._DADOS;
            }
            set
            {
                if (this._DADOS != value)
                {
                    this.OnDADOSChanging(value);
                    this.SendPropertyChanging();
                    this._DADOS = value;
                    this.SendPropertyChanged("DADOS");
                    this.OnDADOSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DTAINCLUSAO in the schema.
        /// </summary>
        [Column(Storage = "_DTAINCLUSAO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DTAINCLUSAO
        {
            get
            {
                return this._DTAINCLUSAO;
            }
            set
            {
                if (this._DTAINCLUSAO != value)
                {
                    this.OnDTAINCLUSAOChanging(value);
                    this.SendPropertyChanging();
                    this._DTAINCLUSAO = value;
                    this.SendPropertyChanged("DTAINCLUSAO");
                    this.OnDTAINCLUSAOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for OracleContext.CNGRUPO in the schema.
    /// </summary>
    [Table(Name = @"CN_GRUPOS")]
    public partial class CNGRUPO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CODGRUPO;

        private string _NOME;

        private string _FONE;

        private string _CELULAR;

        private string _EMAIL;

        private System.Nullable<int> _TIPOGRUPO;

        private System.Nullable<int> _SITGRUPO;

        private string _DATAATUALIZACAO;

        private string _USUARIOATUALIZACAO;

        private string _CHAPA;

        private System.Nullable<System.DateTime> _DTADMISSAO;

        private System.Nullable<System.DateTime> _DTDEMISSAO;

        private string _NOMECOMPLETO;

        private string _NUMCONTA;

        private string _AGENCIA;

        private System.Nullable<int> _RDVAPROVA;

        private System.Nullable<int> _SEQPESSOA;

        private string _UNICAMISA1;

        private string _UNICAMISA2;

        private string _UNICALCA;

        private string _UNICALCADO;

        private string _UNIOBS;

        private string _NUMAGENCIAPAGTO;

        private string _CONTAPAGTO;

        private string _TIPOCONTA;

        private System.Nullable<int> _CODCOLIGADA;

        private string _LOGINFLYTOUR;

        private string _SENHAFLYTOUR;

        private System.Nullable<int> _PEDIDOAPROVA;

        private string _BAIXAAUTOMATICA;

        private System.Nullable<double> _RDVLIMITEAPROVA;
        #pragma warning restore 0649

        private EntitySet<CNGRUPO> _CNGRUPOs_RDVAPROVA;

        private EntityRef<CNGRUPO> _CNGRUPO_RDVAPROVA;

        private EntitySet<CNGRUPOSGEPESSOA> _CNGRUPOSGEPESSOAs;

        private EntitySet<CNVISITA> _CNVISITAs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODGRUPOChanging(int value);
        partial void OnCODGRUPOChanged();
        partial void OnNOMEChanging(string value);
        partial void OnNOMEChanged();
        partial void OnFONEChanging(string value);
        partial void OnFONEChanged();
        partial void OnCELULARChanging(string value);
        partial void OnCELULARChanged();
        partial void OnEMAILChanging(string value);
        partial void OnEMAILChanged();
        partial void OnTIPOGRUPOChanging(System.Nullable<int> value);
        partial void OnTIPOGRUPOChanged();
        partial void OnSITGRUPOChanging(System.Nullable<int> value);
        partial void OnSITGRUPOChanged();
        partial void OnDATAATUALIZACAOChanging(string value);
        partial void OnDATAATUALIZACAOChanged();
        partial void OnUSUARIOATUALIZACAOChanging(string value);
        partial void OnUSUARIOATUALIZACAOChanged();
        partial void OnCHAPAChanging(string value);
        partial void OnCHAPAChanged();
        partial void OnDTADMISSAOChanging(System.Nullable<System.DateTime> value);
        partial void OnDTADMISSAOChanged();
        partial void OnDTDEMISSAOChanging(System.Nullable<System.DateTime> value);
        partial void OnDTDEMISSAOChanged();
        partial void OnNOMECOMPLETOChanging(string value);
        partial void OnNOMECOMPLETOChanged();
        partial void OnNUMCONTAChanging(string value);
        partial void OnNUMCONTAChanged();
        partial void OnAGENCIAChanging(string value);
        partial void OnAGENCIAChanged();
        partial void OnRDVAPROVAChanging(System.Nullable<int> value);
        partial void OnRDVAPROVAChanged();
        partial void OnSEQPESSOAChanging(System.Nullable<int> value);
        partial void OnSEQPESSOAChanged();
        partial void OnUNICAMISA1Changing(string value);
        partial void OnUNICAMISA1Changed();
        partial void OnUNICAMISA2Changing(string value);
        partial void OnUNICAMISA2Changed();
        partial void OnUNICALCAChanging(string value);
        partial void OnUNICALCAChanged();
        partial void OnUNICALCADOChanging(string value);
        partial void OnUNICALCADOChanged();
        partial void OnUNIOBSChanging(string value);
        partial void OnUNIOBSChanged();
        partial void OnNUMAGENCIAPAGTOChanging(string value);
        partial void OnNUMAGENCIAPAGTOChanged();
        partial void OnCONTAPAGTOChanging(string value);
        partial void OnCONTAPAGTOChanged();
        partial void OnTIPOCONTAChanging(string value);
        partial void OnTIPOCONTAChanged();
        partial void OnCODCOLIGADAChanging(System.Nullable<int> value);
        partial void OnCODCOLIGADAChanged();
        partial void OnLOGINFLYTOURChanging(string value);
        partial void OnLOGINFLYTOURChanged();
        partial void OnSENHAFLYTOURChanging(string value);
        partial void OnSENHAFLYTOURChanged();
        partial void OnPEDIDOAPROVAChanging(System.Nullable<int> value);
        partial void OnPEDIDOAPROVAChanged();
        partial void OnBAIXAAUTOMATICAChanging(string value);
        partial void OnBAIXAAUTOMATICAChanged();
        partial void OnRDVLIMITEAPROVAChanging(System.Nullable<double> value);
        partial void OnRDVLIMITEAPROVAChanged();
        #endregion

        public CNGRUPO()
        {
            this._CNGRUPOs_RDVAPROVA = new EntitySet<CNGRUPO>(new Action<CNGRUPO>(this.attach_CNGRUPOs_RDVAPROVA), new Action<CNGRUPO>(this.detach_CNGRUPOs_RDVAPROVA));
            this._CNGRUPO_RDVAPROVA  = default(EntityRef<CNGRUPO>);
            this._CNGRUPOSGEPESSOAs = new EntitySet<CNGRUPOSGEPESSOA>(new Action<CNGRUPOSGEPESSOA>(this.attach_CNGRUPOSGEPESSOAs), new Action<CNGRUPOSGEPESSOA>(this.detach_CNGRUPOSGEPESSOAs));
            this._CNVISITAs = new EntitySet<CNVISITA>(new Action<CNVISITA>(this.attach_CNVISITAs), new Action<CNVISITA>(this.detach_CNVISITAs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODGRUPO in the schema.
        /// </summary>
        [Column(Name = @"COD_GRUPO", Storage = "_CODGRUPO", CanBeNull = false, DbType = "NUMBER(6) NOT NULL", IsPrimaryKey = true)]
        public int CODGRUPO
        {
            get
            {
                return this._CODGRUPO;
            }
            set
            {
                if (this._CODGRUPO != value)
                {
                    this.OnCODGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._CODGRUPO = value;
                    this.SendPropertyChanged("CODGRUPO");
                    this.OnCODGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOME in the schema.
        /// </summary>
        [Column(Storage = "_NOME", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOME
        {
            get
            {
                return this._NOME;
            }
            set
            {
                if (this._NOME != value)
                {
                    this.OnNOMEChanging(value);
                    this.SendPropertyChanging();
                    this._NOME = value;
                    this.SendPropertyChanged("NOME");
                    this.OnNOMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONE in the schema.
        /// </summary>
        [Column(Storage = "_FONE", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string FONE
        {
            get
            {
                return this._FONE;
            }
            set
            {
                if (this._FONE != value)
                {
                    this.OnFONEChanging(value);
                    this.SendPropertyChanging();
                    this._FONE = value;
                    this.SendPropertyChanged("FONE");
                    this.OnFONEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CELULAR in the schema.
        /// </summary>
        [Column(Storage = "_CELULAR", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CELULAR
        {
            get
            {
                return this._CELULAR;
            }
            set
            {
                if (this._CELULAR != value)
                {
                    this.OnCELULARChanging(value);
                    this.SendPropertyChanging();
                    this._CELULAR = value;
                    this.SendPropertyChanged("CELULAR");
                    this.OnCELULARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMAIL in the schema.
        /// </summary>
        [Column(Storage = "_EMAIL", DbType = "VARCHAR2(200 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if (this._EMAIL != value)
                {
                    this.OnEMAILChanging(value);
                    this.SendPropertyChanging();
                    this._EMAIL = value;
                    this.SendPropertyChanged("EMAIL");
                    this.OnEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOGRUPO in the schema.
        /// </summary>
        [Column(Name = @"TIPO_GRUPO", Storage = "_TIPOGRUPO", DbType = "NUMBER(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> TIPOGRUPO
        {
            get
            {
                return this._TIPOGRUPO;
            }
            set
            {
                if (this._TIPOGRUPO != value)
                {
                    this.OnTIPOGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._TIPOGRUPO = value;
                    this.SendPropertyChanged("TIPOGRUPO");
                    this.OnTIPOGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SITGRUPO in the schema.
        /// </summary>
        [Column(Name = @"SIT_GRUPO", Storage = "_SITGRUPO", DbType = "NUMBER(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> SITGRUPO
        {
            get
            {
                return this._SITGRUPO;
            }
            set
            {
                if (this._SITGRUPO != value)
                {
                    this.OnSITGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._SITGRUPO = value;
                    this.SendPropertyChanged("SITGRUPO");
                    this.OnSITGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"DATA_ATUALIZACAO", Storage = "_DATAATUALIZACAO", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATAATUALIZACAO
        {
            get
            {
                return this._DATAATUALIZACAO;
            }
            set
            {
                if (this._DATAATUALIZACAO != value)
                {
                    this.OnDATAATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._DATAATUALIZACAO = value;
                    this.SendPropertyChanged("DATAATUALIZACAO");
                    this.OnDATAATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_ATUALIZACAO", Storage = "_USUARIOATUALIZACAO", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUARIOATUALIZACAO
        {
            get
            {
                return this._USUARIOATUALIZACAO;
            }
            set
            {
                if (this._USUARIOATUALIZACAO != value)
                {
                    this.OnUSUARIOATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOATUALIZACAO = value;
                    this.SendPropertyChanged("USUARIOATUALIZACAO");
                    this.OnUSUARIOATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHAPA in the schema.
        /// </summary>
        [Column(Storage = "_CHAPA", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CHAPA
        {
            get
            {
                return this._CHAPA;
            }
            set
            {
                if (this._CHAPA != value)
                {
                    this.OnCHAPAChanging(value);
                    this.SendPropertyChanging();
                    this._CHAPA = value;
                    this.SendPropertyChanged("CHAPA");
                    this.OnCHAPAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DTADMISSAO in the schema.
        /// </summary>
        [Column(Name = @"DT_ADMISSAO", Storage = "_DTADMISSAO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DTADMISSAO
        {
            get
            {
                return this._DTADMISSAO;
            }
            set
            {
                if (this._DTADMISSAO != value)
                {
                    this.OnDTADMISSAOChanging(value);
                    this.SendPropertyChanging();
                    this._DTADMISSAO = value;
                    this.SendPropertyChanged("DTADMISSAO");
                    this.OnDTADMISSAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DTDEMISSAO in the schema.
        /// </summary>
        [Column(Name = @"DT_DEMISSAO", Storage = "_DTDEMISSAO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DTDEMISSAO
        {
            get
            {
                return this._DTDEMISSAO;
            }
            set
            {
                if (this._DTDEMISSAO != value)
                {
                    this.OnDTDEMISSAOChanging(value);
                    this.SendPropertyChanging();
                    this._DTDEMISSAO = value;
                    this.SendPropertyChanged("DTDEMISSAO");
                    this.OnDTDEMISSAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMECOMPLETO in the schema.
        /// </summary>
        [Column(Name = @"NOME_COMPLETO", Storage = "_NOMECOMPLETO", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMECOMPLETO
        {
            get
            {
                return this._NOMECOMPLETO;
            }
            set
            {
                if (this._NOMECOMPLETO != value)
                {
                    this.OnNOMECOMPLETOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMECOMPLETO = value;
                    this.SendPropertyChanged("NOMECOMPLETO");
                    this.OnNOMECOMPLETOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NUMCONTA in the schema.
        /// </summary>
        [Column(Name = @"NUM_CONTA", Storage = "_NUMCONTA", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NUMCONTA
        {
            get
            {
                return this._NUMCONTA;
            }
            set
            {
                if (this._NUMCONTA != value)
                {
                    this.OnNUMCONTAChanging(value);
                    this.SendPropertyChanging();
                    this._NUMCONTA = value;
                    this.SendPropertyChanged("NUMCONTA");
                    this.OnNUMCONTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AGENCIA in the schema.
        /// </summary>
        [Column(Storage = "_AGENCIA", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string AGENCIA
        {
            get
            {
                return this._AGENCIA;
            }
            set
            {
                if (this._AGENCIA != value)
                {
                    this.OnAGENCIAChanging(value);
                    this.SendPropertyChanging();
                    this._AGENCIA = value;
                    this.SendPropertyChanged("AGENCIA");
                    this.OnAGENCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RDVAPROVA in the schema.
        /// </summary>
        [Column(Name = @"RDV_APROVA", Storage = "_RDVAPROVA", DbType = "NUMBER(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> RDVAPROVA
        {
            get
            {
                return this._RDVAPROVA;
            }
            set
            {
                if (this._RDVAPROVA != value)
                {
                    if (this._CNGRUPO_RDVAPROVA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnRDVAPROVAChanging(value);
                    this.SendPropertyChanging();
                    this._RDVAPROVA = value;
                    this.SendPropertyChanged("RDVAPROVA");
                    this.OnRDVAPROVAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SEQPESSOA in the schema.
        /// </summary>
        [Column(Storage = "_SEQPESSOA", DbType = "NUMBER(8) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> SEQPESSOA
        {
            get
            {
                return this._SEQPESSOA;
            }
            set
            {
                if (this._SEQPESSOA != value)
                {
                    this.OnSEQPESSOAChanging(value);
                    this.SendPropertyChanging();
                    this._SEQPESSOA = value;
                    this.SendPropertyChanged("SEQPESSOA");
                    this.OnSEQPESSOAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNICAMISA1 in the schema.
        /// </summary>
        [Column(Name = @"UNI_CAMISA1", Storage = "_UNICAMISA1", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNICAMISA1
        {
            get
            {
                return this._UNICAMISA1;
            }
            set
            {
                if (this._UNICAMISA1 != value)
                {
                    this.OnUNICAMISA1Changing(value);
                    this.SendPropertyChanging();
                    this._UNICAMISA1 = value;
                    this.SendPropertyChanged("UNICAMISA1");
                    this.OnUNICAMISA1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNICAMISA2 in the schema.
        /// </summary>
        [Column(Name = @"UNI_CAMISA2", Storage = "_UNICAMISA2", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNICAMISA2
        {
            get
            {
                return this._UNICAMISA2;
            }
            set
            {
                if (this._UNICAMISA2 != value)
                {
                    this.OnUNICAMISA2Changing(value);
                    this.SendPropertyChanging();
                    this._UNICAMISA2 = value;
                    this.SendPropertyChanged("UNICAMISA2");
                    this.OnUNICAMISA2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNICALCA in the schema.
        /// </summary>
        [Column(Name = @"UNI_CALCA", Storage = "_UNICALCA", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNICALCA
        {
            get
            {
                return this._UNICALCA;
            }
            set
            {
                if (this._UNICALCA != value)
                {
                    this.OnUNICALCAChanging(value);
                    this.SendPropertyChanging();
                    this._UNICALCA = value;
                    this.SendPropertyChanged("UNICALCA");
                    this.OnUNICALCAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNICALCADO in the schema.
        /// </summary>
        [Column(Name = @"UNI_CALCADO", Storage = "_UNICALCADO", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNICALCADO
        {
            get
            {
                return this._UNICALCADO;
            }
            set
            {
                if (this._UNICALCADO != value)
                {
                    this.OnUNICALCADOChanging(value);
                    this.SendPropertyChanging();
                    this._UNICALCADO = value;
                    this.SendPropertyChanged("UNICALCADO");
                    this.OnUNICALCADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNIOBS in the schema.
        /// </summary>
        [Column(Name = @"UNI_OBS", Storage = "_UNIOBS", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNIOBS
        {
            get
            {
                return this._UNIOBS;
            }
            set
            {
                if (this._UNIOBS != value)
                {
                    this.OnUNIOBSChanging(value);
                    this.SendPropertyChanging();
                    this._UNIOBS = value;
                    this.SendPropertyChanged("UNIOBS");
                    this.OnUNIOBSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NUMAGENCIAPAGTO in the schema.
        /// </summary>
        [Column(Storage = "_NUMAGENCIAPAGTO", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NUMAGENCIAPAGTO
        {
            get
            {
                return this._NUMAGENCIAPAGTO;
            }
            set
            {
                if (this._NUMAGENCIAPAGTO != value)
                {
                    this.OnNUMAGENCIAPAGTOChanging(value);
                    this.SendPropertyChanging();
                    this._NUMAGENCIAPAGTO = value;
                    this.SendPropertyChanged("NUMAGENCIAPAGTO");
                    this.OnNUMAGENCIAPAGTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONTAPAGTO in the schema.
        /// </summary>
        [Column(Storage = "_CONTAPAGTO", DbType = "VARCHAR2(15 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONTAPAGTO
        {
            get
            {
                return this._CONTAPAGTO;
            }
            set
            {
                if (this._CONTAPAGTO != value)
                {
                    this.OnCONTAPAGTOChanging(value);
                    this.SendPropertyChanging();
                    this._CONTAPAGTO = value;
                    this.SendPropertyChanged("CONTAPAGTO");
                    this.OnCONTAPAGTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOCONTA in the schema.
        /// </summary>
        [Column(Storage = "_TIPOCONTA", DbType = "CHAR(1) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIPOCONTA
        {
            get
            {
                return this._TIPOCONTA;
            }
            set
            {
                if (this._TIPOCONTA != value)
                {
                    this.OnTIPOCONTAChanging(value);
                    this.SendPropertyChanging();
                    this._TIPOCONTA = value;
                    this.SendPropertyChanged("TIPOCONTA");
                    this.OnTIPOCONTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODCOLIGADA in the schema.
        /// </summary>
        [Column(Storage = "_CODCOLIGADA", DbType = "NUMBER(5) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> CODCOLIGADA
        {
            get
            {
                return this._CODCOLIGADA;
            }
            set
            {
                if (this._CODCOLIGADA != value)
                {
                    this.OnCODCOLIGADAChanging(value);
                    this.SendPropertyChanging();
                    this._CODCOLIGADA = value;
                    this.SendPropertyChanged("CODCOLIGADA");
                    this.OnCODCOLIGADAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOGINFLYTOUR in the schema.
        /// </summary>
        [Column(Storage = "_LOGINFLYTOUR", DbType = "VARCHAR2(40 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LOGINFLYTOUR
        {
            get
            {
                return this._LOGINFLYTOUR;
            }
            set
            {
                if (this._LOGINFLYTOUR != value)
                {
                    this.OnLOGINFLYTOURChanging(value);
                    this.SendPropertyChanging();
                    this._LOGINFLYTOUR = value;
                    this.SendPropertyChanged("LOGINFLYTOUR");
                    this.OnLOGINFLYTOURChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SENHAFLYTOUR in the schema.
        /// </summary>
        [Column(Storage = "_SENHAFLYTOUR", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SENHAFLYTOUR
        {
            get
            {
                return this._SENHAFLYTOUR;
            }
            set
            {
                if (this._SENHAFLYTOUR != value)
                {
                    this.OnSENHAFLYTOURChanging(value);
                    this.SendPropertyChanging();
                    this._SENHAFLYTOUR = value;
                    this.SendPropertyChanged("SENHAFLYTOUR");
                    this.OnSENHAFLYTOURChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PEDIDOAPROVA in the schema.
        /// </summary>
        [Column(Name = @"PEDIDO_APROVA", Storage = "_PEDIDOAPROVA", DbType = "NUMBER(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PEDIDOAPROVA
        {
            get
            {
                return this._PEDIDOAPROVA;
            }
            set
            {
                if (this._PEDIDOAPROVA != value)
                {
                    this.OnPEDIDOAPROVAChanging(value);
                    this.SendPropertyChanging();
                    this._PEDIDOAPROVA = value;
                    this.SendPropertyChanged("PEDIDOAPROVA");
                    this.OnPEDIDOAPROVAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for BAIXAAUTOMATICA in the schema.
        /// </summary>
        [Column(Name = @"BAIXA_AUTOMATICA", Storage = "_BAIXAAUTOMATICA", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string BAIXAAUTOMATICA
        {
            get
            {
                return this._BAIXAAUTOMATICA;
            }
            set
            {
                if (this._BAIXAAUTOMATICA != value)
                {
                    this.OnBAIXAAUTOMATICAChanging(value);
                    this.SendPropertyChanging();
                    this._BAIXAAUTOMATICA = value;
                    this.SendPropertyChanged("BAIXAAUTOMATICA");
                    this.OnBAIXAAUTOMATICAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RDVLIMITEAPROVA in the schema.
        /// </summary>
        [Column(Name = @"RDV_LIMITE_APROVA", Storage = "_RDVLIMITEAPROVA", DbType = "NUMBER(15,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> RDVLIMITEAPROVA
        {
            get
            {
                return this._RDVLIMITEAPROVA;
            }
            set
            {
                if (this._RDVLIMITEAPROVA != value)
                {
                    this.OnRDVLIMITEAPROVAChanging(value);
                    this.SendPropertyChanging();
                    this._RDVLIMITEAPROVA = value;
                    this.SendPropertyChanged("RDVLIMITEAPROVA");
                    this.OnRDVLIMITEAPROVAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CNGRUPOs_RDVAPROVA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CNGRUPO_CNGRUPO", Storage="_CNGRUPOs_RDVAPROVA", ThisKey="CODGRUPO", OtherKey="RDVAPROVA", DeleteRule="NO ACTION")]
        public EntitySet<CNGRUPO> CNGRUPOs_RDVAPROVA
        {
            get
            {
                return this._CNGRUPOs_RDVAPROVA;
            }
            set
            {
                this._CNGRUPOs_RDVAPROVA.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for CNGRUPO_RDVAPROVA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CNGRUPO_CNGRUPO", Storage="_CNGRUPO_RDVAPROVA", ThisKey="RDVAPROVA", OtherKey="CODGRUPO", IsForeignKey=true)]
        public CNGRUPO CNGRUPO_RDVAPROVA
        {
            get
            {
                return this._CNGRUPO_RDVAPROVA.Entity;
            }
            set
            {
                CNGRUPO previousValue = this._CNGRUPO_RDVAPROVA.Entity;
                if ((previousValue != value) || (this._CNGRUPO_RDVAPROVA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._CNGRUPO_RDVAPROVA.Entity = null;
                        previousValue.CNGRUPOs_RDVAPROVA.Remove(this);
                    }
                    this._CNGRUPO_RDVAPROVA.Entity = value;
                    if (value != null)
                    {
                        this._RDVAPROVA = value.CODGRUPO;
                        value.CNGRUPOs_RDVAPROVA.Add(this);
                    }
                    else
                    {
                        this._RDVAPROVA = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("CNGRUPO_RDVAPROVA");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CNGRUPOSGEPESSOAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CNGRUPO_CNGRUPOSGEPESSOA", Storage="_CNGRUPOSGEPESSOAs", ThisKey="CODGRUPO", OtherKey="CODGRUPO", DeleteRule="CASCADE")]
        public EntitySet<CNGRUPOSGEPESSOA> CNGRUPOSGEPESSOAs
        {
            get
            {
                return this._CNGRUPOSGEPESSOAs;
            }
            set
            {
                this._CNGRUPOSGEPESSOAs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for CNVISITAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CNGRUPO_CNVISITA", Storage="_CNVISITAs", ThisKey="CODGRUPO", OtherKey="CODGRUPO", DeleteRule="NO ACTION")]
        public EntitySet<CNVISITA> CNVISITAs
        {
            get
            {
                return this._CNVISITAs;
            }
            set
            {
                this._CNVISITAs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_CNGRUPOs_RDVAPROVA(CNGRUPO entity)
        {
            this.SendPropertyChanging("CNGRUPOs_RDVAPROVA");
            entity.CNGRUPO_RDVAPROVA = this;
        }
    
        private void detach_CNGRUPOs_RDVAPROVA(CNGRUPO entity)
        {
            this.SendPropertyChanging("CNGRUPOs_RDVAPROVA");
            entity.CNGRUPO_RDVAPROVA = null;
        }

        private void attach_CNGRUPOSGEPESSOAs(CNGRUPOSGEPESSOA entity)
        {
            this.SendPropertyChanging("CNGRUPOSGEPESSOAs");
            entity.CNGRUPO = this;
        }
    
        private void detach_CNGRUPOSGEPESSOAs(CNGRUPOSGEPESSOA entity)
        {
            this.SendPropertyChanging("CNGRUPOSGEPESSOAs");
            entity.CNGRUPO = null;
        }

        private void attach_CNVISITAs(CNVISITA entity)
        {
            this.SendPropertyChanging("CNVISITAs");
            entity.CNGRUPO = this;
        }
    
        private void detach_CNVISITAs(CNVISITA entity)
        {
            this.SendPropertyChanging("CNVISITAs");
            entity.CNGRUPO = null;
        }
    }

    /// <summary>
    /// There are no comments for OracleContext.CNGRUPOSGEPESSOA in the schema.
    /// </summary>
    [Table(Name = @"CN_GRUPOS_GEPESSOA")]
    public partial class CNGRUPOSGEPESSOA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _SEQREVENDA;

        private int _CODGRUPO;

        private System.Nullable<System.DateTime> _DTINICIAL;

        private System.Nullable<System.DateTime> _DTFINAL;

        private int _SITGRUPO;

        private string _DATAATUALIZACAO;

        private string _USUARIOATUALIZACAO;

        private decimal _CODLINHA;

        private decimal _TIPOGRUPO;
        #pragma warning restore 0649

        private EntityRef<CNGRUPO> _CNGRUPO;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnSEQREVENDAChanging(int value);
        partial void OnSEQREVENDAChanged();
        partial void OnCODGRUPOChanging(int value);
        partial void OnCODGRUPOChanged();
        partial void OnDTINICIALChanging(System.Nullable<System.DateTime> value);
        partial void OnDTINICIALChanged();
        partial void OnDTFINALChanging(System.Nullable<System.DateTime> value);
        partial void OnDTFINALChanged();
        partial void OnSITGRUPOChanging(int value);
        partial void OnSITGRUPOChanged();
        partial void OnDATAATUALIZACAOChanging(string value);
        partial void OnDATAATUALIZACAOChanged();
        partial void OnUSUARIOATUALIZACAOChanging(string value);
        partial void OnUSUARIOATUALIZACAOChanged();
        partial void OnCODLINHAChanging(decimal value);
        partial void OnCODLINHAChanged();
        partial void OnTIPOGRUPOChanging(decimal value);
        partial void OnTIPOGRUPOChanged();
        #endregion

        public CNGRUPOSGEPESSOA()
        {
            this._CNGRUPO  = default(EntityRef<CNGRUPO>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for SEQREVENDA in the schema.
        /// </summary>
        [Column(Storage = "_SEQREVENDA", CanBeNull = false, DbType = "NUMBER(8) NOT NULL", IsPrimaryKey = true)]
        public int SEQREVENDA
        {
            get
            {
                return this._SEQREVENDA;
            }
            set
            {
                if (this._SEQREVENDA != value)
                {
                    this.OnSEQREVENDAChanging(value);
                    this.SendPropertyChanging();
                    this._SEQREVENDA = value;
                    this.SendPropertyChanged("SEQREVENDA");
                    this.OnSEQREVENDAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODGRUPO in the schema.
        /// </summary>
        [Column(Name = @"COD_GRUPO", Storage = "_CODGRUPO", CanBeNull = false, DbType = "NUMBER(6) NOT NULL", IsPrimaryKey = true)]
        public int CODGRUPO
        {
            get
            {
                return this._CODGRUPO;
            }
            set
            {
                if (this._CODGRUPO != value)
                {
                    if (this._CNGRUPO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCODGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._CODGRUPO = value;
                    this.SendPropertyChanged("CODGRUPO");
                    this.OnCODGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DTINICIAL in the schema.
        /// </summary>
        [Column(Name = @"DT_INICIAL", Storage = "_DTINICIAL", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DTINICIAL
        {
            get
            {
                return this._DTINICIAL;
            }
            set
            {
                if (this._DTINICIAL != value)
                {
                    this.OnDTINICIALChanging(value);
                    this.SendPropertyChanging();
                    this._DTINICIAL = value;
                    this.SendPropertyChanged("DTINICIAL");
                    this.OnDTINICIALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DTFINAL in the schema.
        /// </summary>
        [Column(Name = @"DT_FINAL", Storage = "_DTFINAL", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DTFINAL
        {
            get
            {
                return this._DTFINAL;
            }
            set
            {
                if (this._DTFINAL != value)
                {
                    this.OnDTFINALChanging(value);
                    this.SendPropertyChanging();
                    this._DTFINAL = value;
                    this.SendPropertyChanged("DTFINAL");
                    this.OnDTFINALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SITGRUPO in the schema.
        /// </summary>
        [Column(Name = @"SIT_GRUPO", Storage = "_SITGRUPO", CanBeNull = false, DbType = "NUMBER(6) NOT NULL", IsPrimaryKey = true)]
        public int SITGRUPO
        {
            get
            {
                return this._SITGRUPO;
            }
            set
            {
                if (this._SITGRUPO != value)
                {
                    this.OnSITGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._SITGRUPO = value;
                    this.SendPropertyChanged("SITGRUPO");
                    this.OnSITGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"DATA_ATUALIZACAO", Storage = "_DATAATUALIZACAO", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATAATUALIZACAO
        {
            get
            {
                return this._DATAATUALIZACAO;
            }
            set
            {
                if (this._DATAATUALIZACAO != value)
                {
                    this.OnDATAATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._DATAATUALIZACAO = value;
                    this.SendPropertyChanged("DATAATUALIZACAO");
                    this.OnDATAATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_ATUALIZACAO", Storage = "_USUARIOATUALIZACAO", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUARIOATUALIZACAO
        {
            get
            {
                return this._USUARIOATUALIZACAO;
            }
            set
            {
                if (this._USUARIOATUALIZACAO != value)
                {
                    this.OnUSUARIOATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOATUALIZACAO = value;
                    this.SendPropertyChanged("USUARIOATUALIZACAO");
                    this.OnUSUARIOATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODLINHA in the schema.
        /// </summary>
        [Column(Name = @"COD_LINHA", Storage = "_CODLINHA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CODLINHA
        {
            get
            {
                return this._CODLINHA;
            }
            set
            {
                if (this._CODLINHA != value)
                {
                    this.OnCODLINHAChanging(value);
                    this.SendPropertyChanging();
                    this._CODLINHA = value;
                    this.SendPropertyChanged("CODLINHA");
                    this.OnCODLINHAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOGRUPO in the schema.
        /// </summary>
        [Column(Name = @"TIPO_GRUPO", Storage = "_TIPOGRUPO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TIPOGRUPO
        {
            get
            {
                return this._TIPOGRUPO;
            }
            set
            {
                if (this._TIPOGRUPO != value)
                {
                    this.OnTIPOGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._TIPOGRUPO = value;
                    this.SendPropertyChanged("TIPOGRUPO");
                    this.OnTIPOGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CNGRUPO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CNGRUPO_CNGRUPOSGEPESSOA", Storage="_CNGRUPO", ThisKey="CODGRUPO", OtherKey="CODGRUPO", IsForeignKey=true)]
        public CNGRUPO CNGRUPO
        {
            get
            {
                return this._CNGRUPO.Entity;
            }
            set
            {
                CNGRUPO previousValue = this._CNGRUPO.Entity;
                if ((previousValue != value) || (this._CNGRUPO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._CNGRUPO.Entity = null;
                        previousValue.CNGRUPOSGEPESSOAs.Remove(this);
                    }
                    this._CNGRUPO.Entity = value;
                    if (value != null)
                    {
                        this._CODGRUPO = value.CODGRUPO;
                        value.CNGRUPOSGEPESSOAs.Add(this);
                    }
                    else
                    {
                        this._CODGRUPO = default(int);
                    }
                    this.SendPropertyChanged("CNGRUPO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for OracleContext.CIDADE in the schema.
    /// </summary>
    [Table(Name = @"CMGLOBAL.CIDADE")]
    public partial class CIDADE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private string _NOME = @"NULL";

        private System.Nullable<decimal> _ESTADO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnNOMEChanging(string value);
        partial void OnNOMEChanged();
        partial void OnESTADOChanging(System.Nullable<decimal> value);
        partial void OnESTADOChanged();
        #endregion

        public CIDADE()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOME in the schema.
        /// </summary>
        [Column(Storage = "_NOME", DbType = "VARCHAR2(120 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOME
        {
            get
            {
                return this._NOME;
            }
            set
            {
                if (this._NOME != value)
                {
                    this.OnNOMEChanging(value);
                    this.SendPropertyChanging();
                    this._NOME = value;
                    this.SendPropertyChanged("NOME");
                    this.OnNOMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> ESTADO
        {
            get
            {
                return this._ESTADO;
            }
            set
            {
                if (this._ESTADO != value)
                {
                    this.OnESTADOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADO = value;
                    this.SendPropertyChanged("ESTADO");
                    this.OnESTADOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for OracleContext.ESTADO in the schema.
    /// </summary>
    [Table(Name = @"CMGLOBAL.ESTADO")]
    public partial class ESTADO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private string _NOME = @"NULL";

        private string _UF = @"NULL";

        private System.Nullable<decimal> _PAIS;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnNOMEChanging(string value);
        partial void OnNOMEChanged();
        partial void OnUFChanging(string value);
        partial void OnUFChanged();
        partial void OnPAISChanging(System.Nullable<decimal> value);
        partial void OnPAISChanged();
        #endregion

        public ESTADO()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOME in the schema.
        /// </summary>
        [Column(Storage = "_NOME", DbType = "VARCHAR2(75 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOME
        {
            get
            {
                return this._NOME;
            }
            set
            {
                if (this._NOME != value)
                {
                    this.OnNOMEChanging(value);
                    this.SendPropertyChanging();
                    this._NOME = value;
                    this.SendPropertyChanged("NOME");
                    this.OnNOMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UF in the schema.
        /// </summary>
        [Column(Storage = "_UF", DbType = "VARCHAR2(5 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UF
        {
            get
            {
                return this._UF;
            }
            set
            {
                if (this._UF != value)
                {
                    this.OnUFChanging(value);
                    this.SendPropertyChanging();
                    this._UF = value;
                    this.SendPropertyChanged("UF");
                    this.OnUFChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PAIS in the schema.
        /// </summary>
        [Column(Storage = "_PAIS", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> PAIS
        {
            get
            {
                return this._PAIS;
            }
            set
            {
                if (this._PAIS != value)
                {
                    this.OnPAISChanging(value);
                    this.SendPropertyChanging();
                    this._PAIS = value;
                    this.SendPropertyChanged("PAIS");
                    this.OnPAISChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for OracleContext.CNAE in the schema.
    /// </summary>
    [Table(Name = @"CMGLOBAL.CNAE")]
    public partial class CNAE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CODIGO;

        private string _CNAE1;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODIGOChanging(decimal value);
        partial void OnCODIGOChanged();
        partial void OnCNAE1Changing(string value);
        partial void OnCNAE1Changed();
        #endregion

        public CNAE()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODIGO in the schema.
        /// </summary>
        [Column(Storage = "_CODIGO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CODIGO
        {
            get
            {
                return this._CODIGO;
            }
            set
            {
                if (this._CODIGO != value)
                {
                    this.OnCODIGOChanging(value);
                    this.SendPropertyChanging();
                    this._CODIGO = value;
                    this.SendPropertyChanged("CODIGO");
                    this.OnCODIGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CNAE1 in the schema.
        /// </summary>
        [Column(Name = @"CNAE", Storage = "_CNAE1", DbType = "VARCHAR2(500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CNAE1
        {
            get
            {
                return this._CNAE1;
            }
            set
            {
                if (this._CNAE1 != value)
                {
                    this.OnCNAE1Changing(value);
                    this.SendPropertyChanging();
                    this._CNAE1 = value;
                    this.SendPropertyChanged("CNAE1");
                    this.OnCNAE1Changed();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for OracleContext.WEBLOGIN in the schema.
    /// </summary>
    [Table(Name = @"WEB_LOGIN")]
    public partial class WEBLOGIN : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CODLOGIN;

        private string _LOGIN;

        private string _SENHA;

        private System.Nullable<decimal> _TENTATIVAS;

        private System.DateTime _DATAATUALIZACAO;

        private string _USUARIOATUALIZACAO;

        private System.Nullable<decimal> _CODGRUPO;

        private string _OBSERVACOES;

        private System.Nullable<decimal> _SEQREVENDA;

        private int _ATIVO;

        private string _TIPOUSUARIO;

        private int _ALTEROUSENHA;

        private string _SENHANOVA;

        private string _IP;

        private string _LOGINSERASA;

        private string _SENHASERASA;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODLOGINChanging(decimal value);
        partial void OnCODLOGINChanged();
        partial void OnLOGINChanging(string value);
        partial void OnLOGINChanged();
        partial void OnSENHAChanging(string value);
        partial void OnSENHAChanged();
        partial void OnTENTATIVASChanging(System.Nullable<decimal> value);
        partial void OnTENTATIVASChanged();
        partial void OnDATAATUALIZACAOChanging(System.DateTime value);
        partial void OnDATAATUALIZACAOChanged();
        partial void OnUSUARIOATUALIZACAOChanging(string value);
        partial void OnUSUARIOATUALIZACAOChanged();
        partial void OnCODGRUPOChanging(System.Nullable<decimal> value);
        partial void OnCODGRUPOChanged();
        partial void OnOBSERVACOESChanging(string value);
        partial void OnOBSERVACOESChanged();
        partial void OnSEQREVENDAChanging(System.Nullable<decimal> value);
        partial void OnSEQREVENDAChanged();
        partial void OnATIVOChanging(int value);
        partial void OnATIVOChanged();
        partial void OnTIPOUSUARIOChanging(string value);
        partial void OnTIPOUSUARIOChanged();
        partial void OnALTEROUSENHAChanging(int value);
        partial void OnALTEROUSENHAChanged();
        partial void OnSENHANOVAChanging(string value);
        partial void OnSENHANOVAChanged();
        partial void OnIPChanging(string value);
        partial void OnIPChanged();
        partial void OnLOGINSERASAChanging(string value);
        partial void OnLOGINSERASAChanged();
        partial void OnSENHASERASAChanging(string value);
        partial void OnSENHASERASAChanged();
        #endregion

        public WEBLOGIN()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODLOGIN in the schema.
        /// </summary>
        [Column(Name = @"COD_LOGIN", Storage = "_CODLOGIN", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CODLOGIN
        {
            get
            {
                return this._CODLOGIN;
            }
            set
            {
                if (this._CODLOGIN != value)
                {
                    this.OnCODLOGINChanging(value);
                    this.SendPropertyChanging();
                    this._CODLOGIN = value;
                    this.SendPropertyChanged("CODLOGIN");
                    this.OnCODLOGINChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOGIN in the schema.
        /// </summary>
        [Column(Storage = "_LOGIN", CanBeNull = false, DbType = "VARCHAR2(40 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string LOGIN
        {
            get
            {
                return this._LOGIN;
            }
            set
            {
                if (this._LOGIN != value)
                {
                    this.OnLOGINChanging(value);
                    this.SendPropertyChanging();
                    this._LOGIN = value;
                    this.SendPropertyChanged("LOGIN");
                    this.OnLOGINChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SENHA in the schema.
        /// </summary>
        [Column(Storage = "_SENHA", CanBeNull = false, DbType = "VARCHAR2(20 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SENHA
        {
            get
            {
                return this._SENHA;
            }
            set
            {
                if (this._SENHA != value)
                {
                    this.OnSENHAChanging(value);
                    this.SendPropertyChanging();
                    this._SENHA = value;
                    this.SendPropertyChanged("SENHA");
                    this.OnSENHAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENTATIVAS in the schema.
        /// </summary>
        [Column(Storage = "_TENTATIVAS", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> TENTATIVAS
        {
            get
            {
                return this._TENTATIVAS;
            }
            set
            {
                if (this._TENTATIVAS != value)
                {
                    this.OnTENTATIVASChanging(value);
                    this.SendPropertyChanging();
                    this._TENTATIVAS = value;
                    this.SendPropertyChanged("TENTATIVAS");
                    this.OnTENTATIVASChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"DATA_ATUALIZACAO", Storage = "_DATAATUALIZACAO", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime DATAATUALIZACAO
        {
            get
            {
                return this._DATAATUALIZACAO;
            }
            set
            {
                if (this._DATAATUALIZACAO != value)
                {
                    this.OnDATAATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._DATAATUALIZACAO = value;
                    this.SendPropertyChanged("DATAATUALIZACAO");
                    this.OnDATAATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_ATUALIZACAO", Storage = "_USUARIOATUALIZACAO", CanBeNull = false, DbType = "VARCHAR2(30 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUARIOATUALIZACAO
        {
            get
            {
                return this._USUARIOATUALIZACAO;
            }
            set
            {
                if (this._USUARIOATUALIZACAO != value)
                {
                    this.OnUSUARIOATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOATUALIZACAO = value;
                    this.SendPropertyChanged("USUARIOATUALIZACAO");
                    this.OnUSUARIOATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODGRUPO in the schema.
        /// </summary>
        [Column(Name = @"COD_GRUPO", Storage = "_CODGRUPO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> CODGRUPO
        {
            get
            {
                return this._CODGRUPO;
            }
            set
            {
                if (this._CODGRUPO != value)
                {
                    this.OnCODGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._CODGRUPO = value;
                    this.SendPropertyChanged("CODGRUPO");
                    this.OnCODGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OBSERVACOES in the schema.
        /// </summary>
        [Column(Storage = "_OBSERVACOES", DbType = "VARCHAR2(600 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string OBSERVACOES
        {
            get
            {
                return this._OBSERVACOES;
            }
            set
            {
                if (this._OBSERVACOES != value)
                {
                    this.OnOBSERVACOESChanging(value);
                    this.SendPropertyChanging();
                    this._OBSERVACOES = value;
                    this.SendPropertyChanged("OBSERVACOES");
                    this.OnOBSERVACOESChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SEQREVENDA in the schema.
        /// </summary>
        [Column(Storage = "_SEQREVENDA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> SEQREVENDA
        {
            get
            {
                return this._SEQREVENDA;
            }
            set
            {
                if (this._SEQREVENDA != value)
                {
                    this.OnSEQREVENDAChanging(value);
                    this.SendPropertyChanging();
                    this._SEQREVENDA = value;
                    this.SendPropertyChanged("SEQREVENDA");
                    this.OnSEQREVENDAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ATIVO in the schema.
        /// </summary>
        [Column(Storage = "_ATIVO", CanBeNull = false, DbType = "NUMBER(2) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ATIVO
        {
            get
            {
                return this._ATIVO;
            }
            set
            {
                if (this._ATIVO != value)
                {
                    this.OnATIVOChanging(value);
                    this.SendPropertyChanging();
                    this._ATIVO = value;
                    this.SendPropertyChanged("ATIVO");
                    this.OnATIVOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_TIPOUSUARIO", CanBeNull = false, DbType = "CHAR(1) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TIPOUSUARIO
        {
            get
            {
                return this._TIPOUSUARIO;
            }
            set
            {
                if (this._TIPOUSUARIO != value)
                {
                    this.OnTIPOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._TIPOUSUARIO = value;
                    this.SendPropertyChanged("TIPOUSUARIO");
                    this.OnTIPOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ALTEROUSENHA in the schema.
        /// </summary>
        [Column(Storage = "_ALTEROUSENHA", CanBeNull = false, DbType = "NUMBER(2) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ALTEROUSENHA
        {
            get
            {
                return this._ALTEROUSENHA;
            }
            set
            {
                if (this._ALTEROUSENHA != value)
                {
                    this.OnALTEROUSENHAChanging(value);
                    this.SendPropertyChanging();
                    this._ALTEROUSENHA = value;
                    this.SendPropertyChanged("ALTEROUSENHA");
                    this.OnALTEROUSENHAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SENHANOVA in the schema.
        /// </summary>
        [Column(Storage = "_SENHANOVA", DbType = "VARCHAR2(32 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SENHANOVA
        {
            get
            {
                return this._SENHANOVA;
            }
            set
            {
                if (this._SENHANOVA != value)
                {
                    this.OnSENHANOVAChanging(value);
                    this.SendPropertyChanging();
                    this._SENHANOVA = value;
                    this.SendPropertyChanged("SENHANOVA");
                    this.OnSENHANOVAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IP in the schema.
        /// </summary>
        [Column(Storage = "_IP", DbType = "VARCHAR2(15 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string IP
        {
            get
            {
                return this._IP;
            }
            set
            {
                if (this._IP != value)
                {
                    this.OnIPChanging(value);
                    this.SendPropertyChanging();
                    this._IP = value;
                    this.SendPropertyChanged("IP");
                    this.OnIPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOGINSERASA in the schema.
        /// </summary>
        [Column(Storage = "_LOGINSERASA", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LOGINSERASA
        {
            get
            {
                return this._LOGINSERASA;
            }
            set
            {
                if (this._LOGINSERASA != value)
                {
                    this.OnLOGINSERASAChanging(value);
                    this.SendPropertyChanging();
                    this._LOGINSERASA = value;
                    this.SendPropertyChanged("LOGINSERASA");
                    this.OnLOGINSERASAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SENHASERASA in the schema.
        /// </summary>
        [Column(Storage = "_SENHASERASA", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SENHASERASA
        {
            get
            {
                return this._SENHASERASA;
            }
            set
            {
                if (this._SENHASERASA != value)
                {
                    this.OnSENHASERASAChanging(value);
                    this.SendPropertyChanging();
                    this._SENHASERASA = value;
                    this.SendPropertyChanged("SENHASERASA");
                    this.OnSENHASERASAChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for OracleContext.CNVISITA in the schema.
    /// </summary>
    [Table(Name = @"CN_VISITAS")]
    public partial class CNVISITA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CODVISITA;

        private System.Nullable<int> _CODGRUPO;

        private System.DateTime _DATAVISITA;

        private string _VISITADO;

        private string _FONE;

        private string _ENDERECO;

        private string _VENDEU;

        private string _MOTIVONAOVENDA;

        private string _OBSERVACOES;

        private System.Nullable<System.DateTime> _DATAREAGENDAMENTO;

        private string _DATAATUALIZACAO;

        private string _USUARIOATUALIZACAO;

        private System.Nullable<bool> _REAGENDAMENTOREALIZADO;

        private string _EMAIL;

        private System.Nullable<decimal> _VALORBEM;

        private string _UF;

        private string _CIDADE;

        private string _DDDCELULAR;

        private string _CELULAR;

        private string _DDDFONE;

        private string _WHATSAPP;

        private string _ATIVIDADE;

        private System.Nullable<System.DateTime> _DTAEXCLUSAO;

        private string _USUARIOEXCLUSAO;

        private string _MARCABEM;

        private string _MODELOBEM;

        private System.Nullable<System.DateTime> _DATAINCLUSAO = DateTime.Now;

        private string _USUARIOINCLUSAO;
        #pragma warning restore 0649

        private EntityRef<CNGRUPO> _CNGRUPO;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODVISITAChanging(decimal value);
        partial void OnCODVISITAChanged();
        partial void OnCODGRUPOChanging(System.Nullable<int> value);
        partial void OnCODGRUPOChanged();
        partial void OnDATAVISITAChanging(System.DateTime value);
        partial void OnDATAVISITAChanged();
        partial void OnVISITADOChanging(string value);
        partial void OnVISITADOChanged();
        partial void OnFONEChanging(string value);
        partial void OnFONEChanged();
        partial void OnENDERECOChanging(string value);
        partial void OnENDERECOChanged();
        partial void OnVENDEUChanging(string value);
        partial void OnVENDEUChanged();
        partial void OnMOTIVONAOVENDAChanging(string value);
        partial void OnMOTIVONAOVENDAChanged();
        partial void OnOBSERVACOESChanging(string value);
        partial void OnOBSERVACOESChanged();
        partial void OnDATAREAGENDAMENTOChanging(System.Nullable<System.DateTime> value);
        partial void OnDATAREAGENDAMENTOChanged();
        partial void OnDATAATUALIZACAOChanging(string value);
        partial void OnDATAATUALIZACAOChanged();
        partial void OnUSUARIOATUALIZACAOChanging(string value);
        partial void OnUSUARIOATUALIZACAOChanged();
        partial void OnREAGENDAMENTOREALIZADOChanging(System.Nullable<bool> value);
        partial void OnREAGENDAMENTOREALIZADOChanged();
        partial void OnEMAILChanging(string value);
        partial void OnEMAILChanged();
        partial void OnVALORBEMChanging(System.Nullable<decimal> value);
        partial void OnVALORBEMChanged();
        partial void OnUFChanging(string value);
        partial void OnUFChanged();
        partial void OnCIDADEChanging(string value);
        partial void OnCIDADEChanged();
        partial void OnDDDCELULARChanging(string value);
        partial void OnDDDCELULARChanged();
        partial void OnCELULARChanging(string value);
        partial void OnCELULARChanged();
        partial void OnDDDFONEChanging(string value);
        partial void OnDDDFONEChanged();
        partial void OnWHATSAPPChanging(string value);
        partial void OnWHATSAPPChanged();
        partial void OnATIVIDADEChanging(string value);
        partial void OnATIVIDADEChanged();
        partial void OnDTAEXCLUSAOChanging(System.Nullable<System.DateTime> value);
        partial void OnDTAEXCLUSAOChanged();
        partial void OnUSUARIOEXCLUSAOChanging(string value);
        partial void OnUSUARIOEXCLUSAOChanged();
        partial void OnMARCABEMChanging(string value);
        partial void OnMARCABEMChanged();
        partial void OnMODELOBEMChanging(string value);
        partial void OnMODELOBEMChanged();
        partial void OnDATAINCLUSAOChanging(System.Nullable<System.DateTime> value);
        partial void OnDATAINCLUSAOChanged();
        partial void OnUSUARIOINCLUSAOChanging(string value);
        partial void OnUSUARIOINCLUSAOChanged();
        #endregion

        public CNVISITA()
        {
            this._CNGRUPO  = default(EntityRef<CNGRUPO>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODVISITA in the schema.
        /// </summary>
        [Column(Storage = "_CODVISITA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CODVISITA
        {
            get
            {
                return this._CODVISITA;
            }
            set
            {
                if (this._CODVISITA != value)
                {
                    this.OnCODVISITAChanging(value);
                    this.SendPropertyChanging();
                    this._CODVISITA = value;
                    this.SendPropertyChanged("CODVISITA");
                    this.OnCODVISITAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODGRUPO in the schema.
        /// </summary>
        [Column(Name = @"COD_GRUPO", Storage = "_CODGRUPO", DbType = "NUMBER(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> CODGRUPO
        {
            get
            {
                return this._CODGRUPO;
            }
            set
            {
                if (this._CODGRUPO != value)
                {
                    if (this._CNGRUPO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCODGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._CODGRUPO = value;
                    this.SendPropertyChanged("CODGRUPO");
                    this.OnCODGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAVISITA in the schema.
        /// </summary>
        [Column(Name = @"DATA_VISITA", Storage = "_DATAVISITA", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime DATAVISITA
        {
            get
            {
                return this._DATAVISITA;
            }
            set
            {
                if (this._DATAVISITA != value)
                {
                    this.OnDATAVISITAChanging(value);
                    this.SendPropertyChanging();
                    this._DATAVISITA = value;
                    this.SendPropertyChanged("DATAVISITA");
                    this.OnDATAVISITAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VISITADO in the schema.
        /// </summary>
        [Column(Storage = "_VISITADO", DbType = "VARCHAR2(60 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string VISITADO
        {
            get
            {
                return this._VISITADO;
            }
            set
            {
                if (this._VISITADO != value)
                {
                    this.OnVISITADOChanging(value);
                    this.SendPropertyChanging();
                    this._VISITADO = value;
                    this.SendPropertyChanged("VISITADO");
                    this.OnVISITADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONE in the schema.
        /// </summary>
        [Column(Storage = "_FONE", DbType = "VARCHAR2(40 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string FONE
        {
            get
            {
                return this._FONE;
            }
            set
            {
                if (this._FONE != value)
                {
                    this.OnFONEChanging(value);
                    this.SendPropertyChanging();
                    this._FONE = value;
                    this.SendPropertyChanged("FONE");
                    this.OnFONEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ENDERECO in the schema.
        /// </summary>
        [Column(Storage = "_ENDERECO", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ENDERECO
        {
            get
            {
                return this._ENDERECO;
            }
            set
            {
                if (this._ENDERECO != value)
                {
                    this.OnENDERECOChanging(value);
                    this.SendPropertyChanging();
                    this._ENDERECO = value;
                    this.SendPropertyChanged("ENDERECO");
                    this.OnENDERECOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VENDEU in the schema.
        /// </summary>
        [Column(Storage = "_VENDEU", CanBeNull = false, DbType = "CHAR(1) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string VENDEU
        {
            get
            {
                return this._VENDEU;
            }
            set
            {
                if (this._VENDEU != value)
                {
                    this.OnVENDEUChanging(value);
                    this.SendPropertyChanging();
                    this._VENDEU = value;
                    this.SendPropertyChanged("VENDEU");
                    this.OnVENDEUChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MOTIVONAOVENDA in the schema.
        /// </summary>
        [Column(Name = @"MOTIVO_NAO_VENDA", Storage = "_MOTIVONAOVENDA", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MOTIVONAOVENDA
        {
            get
            {
                return this._MOTIVONAOVENDA;
            }
            set
            {
                if (this._MOTIVONAOVENDA != value)
                {
                    this.OnMOTIVONAOVENDAChanging(value);
                    this.SendPropertyChanging();
                    this._MOTIVONAOVENDA = value;
                    this.SendPropertyChanged("MOTIVONAOVENDA");
                    this.OnMOTIVONAOVENDAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OBSERVACOES in the schema.
        /// </summary>
        [Column(Storage = "_OBSERVACOES", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string OBSERVACOES
        {
            get
            {
                return this._OBSERVACOES;
            }
            set
            {
                if (this._OBSERVACOES != value)
                {
                    this.OnOBSERVACOESChanging(value);
                    this.SendPropertyChanging();
                    this._OBSERVACOES = value;
                    this.SendPropertyChanged("OBSERVACOES");
                    this.OnOBSERVACOESChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAREAGENDAMENTO in the schema.
        /// </summary>
        [Column(Name = @"DATA_REAGENDAMENTO", Storage = "_DATAREAGENDAMENTO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DATAREAGENDAMENTO
        {
            get
            {
                return this._DATAREAGENDAMENTO;
            }
            set
            {
                if (this._DATAREAGENDAMENTO != value)
                {
                    this.OnDATAREAGENDAMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._DATAREAGENDAMENTO = value;
                    this.SendPropertyChanged("DATAREAGENDAMENTO");
                    this.OnDATAREAGENDAMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"DATA_ATUALIZACAO", Storage = "_DATAATUALIZACAO", CanBeNull = false, DbType = "VARCHAR2(20 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATAATUALIZACAO
        {
            get
            {
                return this._DATAATUALIZACAO;
            }
            set
            {
                if (this._DATAATUALIZACAO != value)
                {
                    this.OnDATAATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._DATAATUALIZACAO = value;
                    this.SendPropertyChanged("DATAATUALIZACAO");
                    this.OnDATAATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_ATUALIZACAO", Storage = "_USUARIOATUALIZACAO", CanBeNull = false, DbType = "VARCHAR2(50 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUARIOATUALIZACAO
        {
            get
            {
                return this._USUARIOATUALIZACAO;
            }
            set
            {
                if (this._USUARIOATUALIZACAO != value)
                {
                    this.OnUSUARIOATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOATUALIZACAO = value;
                    this.SendPropertyChanged("USUARIOATUALIZACAO");
                    this.OnUSUARIOATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REAGENDAMENTOREALIZADO in the schema.
        /// </summary>
        [Column(Name = @"REAGENDAMENTO_REALIZADO", Storage = "_REAGENDAMENTOREALIZADO", DbType = "NUMBER(1) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<bool> REAGENDAMENTOREALIZADO
        {
            get
            {
                return this._REAGENDAMENTOREALIZADO;
            }
            set
            {
                if (this._REAGENDAMENTOREALIZADO != value)
                {
                    this.OnREAGENDAMENTOREALIZADOChanging(value);
                    this.SendPropertyChanging();
                    this._REAGENDAMENTOREALIZADO = value;
                    this.SendPropertyChanged("REAGENDAMENTOREALIZADO");
                    this.OnREAGENDAMENTOREALIZADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMAIL in the schema.
        /// </summary>
        [Column(Storage = "_EMAIL", DbType = "VARCHAR2(400 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if (this._EMAIL != value)
                {
                    this.OnEMAILChanging(value);
                    this.SendPropertyChanging();
                    this._EMAIL = value;
                    this.SendPropertyChanged("EMAIL");
                    this.OnEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORBEM in the schema.
        /// </summary>
        [Column(Storage = "_VALORBEM", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> VALORBEM
        {
            get
            {
                return this._VALORBEM;
            }
            set
            {
                if (this._VALORBEM != value)
                {
                    this.OnVALORBEMChanging(value);
                    this.SendPropertyChanging();
                    this._VALORBEM = value;
                    this.SendPropertyChanged("VALORBEM");
                    this.OnVALORBEMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UF in the schema.
        /// </summary>
        [Column(Storage = "_UF", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UF
        {
            get
            {
                return this._UF;
            }
            set
            {
                if (this._UF != value)
                {
                    this.OnUFChanging(value);
                    this.SendPropertyChanging();
                    this._UF = value;
                    this.SendPropertyChanged("UF");
                    this.OnUFChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CIDADE in the schema.
        /// </summary>
        [Column(Storage = "_CIDADE", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CIDADE
        {
            get
            {
                return this._CIDADE;
            }
            set
            {
                if (this._CIDADE != value)
                {
                    this.OnCIDADEChanging(value);
                    this.SendPropertyChanging();
                    this._CIDADE = value;
                    this.SendPropertyChanged("CIDADE");
                    this.OnCIDADEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DDDCELULAR in the schema.
        /// </summary>
        [Column(Storage = "_DDDCELULAR", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DDDCELULAR
        {
            get
            {
                return this._DDDCELULAR;
            }
            set
            {
                if (this._DDDCELULAR != value)
                {
                    this.OnDDDCELULARChanging(value);
                    this.SendPropertyChanging();
                    this._DDDCELULAR = value;
                    this.SendPropertyChanged("DDDCELULAR");
                    this.OnDDDCELULARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CELULAR in the schema.
        /// </summary>
        [Column(Storage = "_CELULAR", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CELULAR
        {
            get
            {
                return this._CELULAR;
            }
            set
            {
                if (this._CELULAR != value)
                {
                    this.OnCELULARChanging(value);
                    this.SendPropertyChanging();
                    this._CELULAR = value;
                    this.SendPropertyChanged("CELULAR");
                    this.OnCELULARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DDDFONE in the schema.
        /// </summary>
        [Column(Storage = "_DDDFONE", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DDDFONE
        {
            get
            {
                return this._DDDFONE;
            }
            set
            {
                if (this._DDDFONE != value)
                {
                    this.OnDDDFONEChanging(value);
                    this.SendPropertyChanging();
                    this._DDDFONE = value;
                    this.SendPropertyChanged("DDDFONE");
                    this.OnDDDFONEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WHATSAPP in the schema.
        /// </summary>
        [Column(Storage = "_WHATSAPP", DbType = "VARCHAR2(20 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string WHATSAPP
        {
            get
            {
                return this._WHATSAPP;
            }
            set
            {
                if (this._WHATSAPP != value)
                {
                    this.OnWHATSAPPChanging(value);
                    this.SendPropertyChanging();
                    this._WHATSAPP = value;
                    this.SendPropertyChanged("WHATSAPP");
                    this.OnWHATSAPPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ATIVIDADE in the schema.
        /// </summary>
        [Column(Storage = "_ATIVIDADE", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ATIVIDADE
        {
            get
            {
                return this._ATIVIDADE;
            }
            set
            {
                if (this._ATIVIDADE != value)
                {
                    this.OnATIVIDADEChanging(value);
                    this.SendPropertyChanging();
                    this._ATIVIDADE = value;
                    this.SendPropertyChanged("ATIVIDADE");
                    this.OnATIVIDADEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DTAEXCLUSAO in the schema.
        /// </summary>
        [Column(Storage = "_DTAEXCLUSAO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DTAEXCLUSAO
        {
            get
            {
                return this._DTAEXCLUSAO;
            }
            set
            {
                if (this._DTAEXCLUSAO != value)
                {
                    this.OnDTAEXCLUSAOChanging(value);
                    this.SendPropertyChanging();
                    this._DTAEXCLUSAO = value;
                    this.SendPropertyChanged("DTAEXCLUSAO");
                    this.OnDTAEXCLUSAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOEXCLUSAO in the schema.
        /// </summary>
        [Column(Storage = "_USUARIOEXCLUSAO", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUARIOEXCLUSAO
        {
            get
            {
                return this._USUARIOEXCLUSAO;
            }
            set
            {
                if (this._USUARIOEXCLUSAO != value)
                {
                    this.OnUSUARIOEXCLUSAOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOEXCLUSAO = value;
                    this.SendPropertyChanged("USUARIOEXCLUSAO");
                    this.OnUSUARIOEXCLUSAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MARCABEM in the schema.
        /// </summary>
        [Column(Storage = "_MARCABEM", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MARCABEM
        {
            get
            {
                return this._MARCABEM;
            }
            set
            {
                if (this._MARCABEM != value)
                {
                    this.OnMARCABEMChanging(value);
                    this.SendPropertyChanging();
                    this._MARCABEM = value;
                    this.SendPropertyChanged("MARCABEM");
                    this.OnMARCABEMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MODELOBEM in the schema.
        /// </summary>
        [Column(Storage = "_MODELOBEM", DbType = "VARCHAR2(500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MODELOBEM
        {
            get
            {
                return this._MODELOBEM;
            }
            set
            {
                if (this._MODELOBEM != value)
                {
                    this.OnMODELOBEMChanging(value);
                    this.SendPropertyChanging();
                    this._MODELOBEM = value;
                    this.SendPropertyChanged("MODELOBEM");
                    this.OnMODELOBEMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAINCLUSAO in the schema.
        /// </summary>
        [Column(Storage = "_DATAINCLUSAO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DATAINCLUSAO
        {
            get
            {
                return this._DATAINCLUSAO;
            }
            set
            {
                if (this._DATAINCLUSAO != value)
                {
                    this.OnDATAINCLUSAOChanging(value);
                    this.SendPropertyChanging();
                    this._DATAINCLUSAO = value;
                    this.SendPropertyChanged("DATAINCLUSAO");
                    this.OnDATAINCLUSAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOINCLUSAO in the schema.
        /// </summary>
        [Column(Storage = "_USUARIOINCLUSAO", DbType = "VARCHAR2(40 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUARIOINCLUSAO
        {
            get
            {
                return this._USUARIOINCLUSAO;
            }
            set
            {
                if (this._USUARIOINCLUSAO != value)
                {
                    this.OnUSUARIOINCLUSAOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOINCLUSAO = value;
                    this.SendPropertyChanged("USUARIOINCLUSAO");
                    this.OnUSUARIOINCLUSAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CNGRUPO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CNGRUPO_CNVISITA", Storage="_CNGRUPO", ThisKey="CODGRUPO", OtherKey="CODGRUPO", IsForeignKey=true)]
        public CNGRUPO CNGRUPO
        {
            get
            {
                return this._CNGRUPO.Entity;
            }
            set
            {
                CNGRUPO previousValue = this._CNGRUPO.Entity;
                if ((previousValue != value) || (this._CNGRUPO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._CNGRUPO.Entity = null;
                        previousValue.CNVISITAs.Remove(this);
                    }
                    this._CNGRUPO.Entity = value;
                    if (value != null)
                    {
                        this._CODGRUPO = value.CODGRUPO;
                        value.CNVISITAs.Add(this);
                    }
                    else
                    {
                        this._CODGRUPO = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("CNGRUPO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for OracleContext.CNPROFISSAO in the schema.
    /// </summary>
    [Table(Name = @"CN_PROFISSAO")]
    public partial class CNPROFISSAO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private System.Nullable<decimal> _CBO;

        private string _PROFISSAO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnCBOChanging(System.Nullable<decimal> value);
        partial void OnCBOChanged();
        partial void OnPROFISSAOChanging(string value);
        partial void OnPROFISSAOChanged();
        #endregion

        public CNPROFISSAO()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "NUMBER GENERATED AS IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CBO in the schema.
        /// </summary>
        [Column(Storage = "_CBO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> CBO
        {
            get
            {
                return this._CBO;
            }
            set
            {
                if (this._CBO != value)
                {
                    this.OnCBOChanging(value);
                    this.SendPropertyChanging();
                    this._CBO = value;
                    this.SendPropertyChanged("CBO");
                    this.OnCBOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROFISSAO in the schema.
        /// </summary>
        [Column(Storage = "_PROFISSAO", DbType = "VARCHAR2(400 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROFISSAO
        {
            get
            {
                return this._PROFISSAO;
            }
            set
            {
                if (this._PROFISSAO != value)
                {
                    this.OnPROFISSAOChanging(value);
                    this.SendPropertyChanging();
                    this._PROFISSAO = value;
                    this.SendPropertyChanged("PROFISSAO");
                    this.OnPROFISSAOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}

namespace OracleContext
{

    /// <summary>
    /// There are no comments for PCURSORVISITAResult in the schema.
    /// </summary>
    public partial class PCURSORVISITAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<decimal> _CODVISITA;

        private System.Nullable<int> _CODGRUPO;

        private System.Nullable<System.DateTime> _DATAVISITA;

        private string _VISITADO;

        private string _FONE;

        private string _ENDERECO;

        private string _VENDEU;

        private string _MOTIVONAOVENDA;

        private string _OBSERVACOES;

        private System.Nullable<System.DateTime> _DATAREAGENDAMENTO;

        private string _DATAATUALIZACAO;

        private string _USUARIOATUALIZACAO;

        private System.Nullable<int> _REAGENDAMENTOREALIZADO;

        private string _EMAIL;

        private System.Nullable<decimal> _VALORBEM;

        private string _MARCABEM;

        private string _MODELOBEM;

        private string _UF;

        private string _CIDADE;

        private string _DDDCELULAR;

        private string _CELULAR;

        private string _DDDFONE;

        private string _WHATSAPP;

        private string _ATIVIDADE;

        private string _NOME;

        private System.Nullable<int> _TIPOGRUPO;

        private System.Nullable<System.DateTime> _DATAINCLUSAO;

        private System.Nullable<int> _CODGRUPOOUTRO;

        private System.Nullable<decimal> _CHECKRESULT;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODVISITAChanging(System.Nullable<decimal> value);
        partial void OnCODVISITAChanged();
        partial void OnCODGRUPOChanging(System.Nullable<int> value);
        partial void OnCODGRUPOChanged();
        partial void OnDATAVISITAChanging(System.Nullable<System.DateTime> value);
        partial void OnDATAVISITAChanged();
        partial void OnVISITADOChanging(string value);
        partial void OnVISITADOChanged();
        partial void OnFONEChanging(string value);
        partial void OnFONEChanged();
        partial void OnENDERECOChanging(string value);
        partial void OnENDERECOChanged();
        partial void OnVENDEUChanging(string value);
        partial void OnVENDEUChanged();
        partial void OnMOTIVONAOVENDAChanging(string value);
        partial void OnMOTIVONAOVENDAChanged();
        partial void OnOBSERVACOESChanging(string value);
        partial void OnOBSERVACOESChanged();
        partial void OnDATAREAGENDAMENTOChanging(System.Nullable<System.DateTime> value);
        partial void OnDATAREAGENDAMENTOChanged();
        partial void OnDATAATUALIZACAOChanging(string value);
        partial void OnDATAATUALIZACAOChanged();
        partial void OnUSUARIOATUALIZACAOChanging(string value);
        partial void OnUSUARIOATUALIZACAOChanged();
        partial void OnREAGENDAMENTOREALIZADOChanging(System.Nullable<int> value);
        partial void OnREAGENDAMENTOREALIZADOChanged();
        partial void OnEMAILChanging(string value);
        partial void OnEMAILChanged();
        partial void OnVALORBEMChanging(System.Nullable<decimal> value);
        partial void OnVALORBEMChanged();
        partial void OnMARCABEMChanging(string value);
        partial void OnMARCABEMChanged();
        partial void OnMODELOBEMChanging(string value);
        partial void OnMODELOBEMChanged();
        partial void OnUFChanging(string value);
        partial void OnUFChanged();
        partial void OnCIDADEChanging(string value);
        partial void OnCIDADEChanged();
        partial void OnDDDCELULARChanging(string value);
        partial void OnDDDCELULARChanged();
        partial void OnCELULARChanging(string value);
        partial void OnCELULARChanged();
        partial void OnDDDFONEChanging(string value);
        partial void OnDDDFONEChanged();
        partial void OnWHATSAPPChanging(string value);
        partial void OnWHATSAPPChanged();
        partial void OnATIVIDADEChanging(string value);
        partial void OnATIVIDADEChanged();
        partial void OnNOMEChanging(string value);
        partial void OnNOMEChanged();
        partial void OnTIPOGRUPOChanging(System.Nullable<int> value);
        partial void OnTIPOGRUPOChanged();
        partial void OnDATAINCLUSAOChanging(System.Nullable<System.DateTime> value);
        partial void OnDATAINCLUSAOChanged();
        partial void OnCODGRUPOOUTROChanging(System.Nullable<int> value);
        partial void OnCODGRUPOOUTROChanged();
        partial void OnCHECKRESULTChanging(System.Nullable<decimal> value);
        partial void OnCHECKRESULTChanged();
        #endregion

        public PCURSORVISITAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODVISITA in the schema.
        /// </summary>
        [Column(Storage = "_CODVISITA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> CODVISITA
        {
            get
            {
                return this._CODVISITA;
            }
            set
            {
                if (this._CODVISITA != value)
                {
                    this.OnCODVISITAChanging(value);
                    this.SendPropertyChanging();
                    this._CODVISITA = value;
                    this.SendPropertyChanged("CODVISITA");
                    this.OnCODVISITAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODGRUPO in the schema.
        /// </summary>
        [Column(Name = @"COD_GRUPO", Storage = "_CODGRUPO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> CODGRUPO
        {
            get
            {
                return this._CODGRUPO;
            }
            set
            {
                if (this._CODGRUPO != value)
                {
                    this.OnCODGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._CODGRUPO = value;
                    this.SendPropertyChanged("CODGRUPO");
                    this.OnCODGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAVISITA in the schema.
        /// </summary>
        [Column(Name = @"DATA_VISITA", Storage = "_DATAVISITA", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DATAVISITA
        {
            get
            {
                return this._DATAVISITA;
            }
            set
            {
                if (this._DATAVISITA != value)
                {
                    this.OnDATAVISITAChanging(value);
                    this.SendPropertyChanging();
                    this._DATAVISITA = value;
                    this.SendPropertyChanged("DATAVISITA");
                    this.OnDATAVISITAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VISITADO in the schema.
        /// </summary>
        [Column(Storage = "_VISITADO", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string VISITADO
        {
            get
            {
                return this._VISITADO;
            }
            set
            {
                if (this._VISITADO != value)
                {
                    this.OnVISITADOChanging(value);
                    this.SendPropertyChanging();
                    this._VISITADO = value;
                    this.SendPropertyChanged("VISITADO");
                    this.OnVISITADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONE in the schema.
        /// </summary>
        [Column(Storage = "_FONE", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string FONE
        {
            get
            {
                return this._FONE;
            }
            set
            {
                if (this._FONE != value)
                {
                    this.OnFONEChanging(value);
                    this.SendPropertyChanging();
                    this._FONE = value;
                    this.SendPropertyChanged("FONE");
                    this.OnFONEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ENDERECO in the schema.
        /// </summary>
        [Column(Storage = "_ENDERECO", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ENDERECO
        {
            get
            {
                return this._ENDERECO;
            }
            set
            {
                if (this._ENDERECO != value)
                {
                    this.OnENDERECOChanging(value);
                    this.SendPropertyChanging();
                    this._ENDERECO = value;
                    this.SendPropertyChanged("ENDERECO");
                    this.OnENDERECOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VENDEU in the schema.
        /// </summary>
        [Column(Storage = "_VENDEU", DbType = "CHAR(2000) NULL", UpdateCheck = UpdateCheck.Never)]
        public string VENDEU
        {
            get
            {
                return this._VENDEU;
            }
            set
            {
                if (this._VENDEU != value)
                {
                    this.OnVENDEUChanging(value);
                    this.SendPropertyChanging();
                    this._VENDEU = value;
                    this.SendPropertyChanged("VENDEU");
                    this.OnVENDEUChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MOTIVONAOVENDA in the schema.
        /// </summary>
        [Column(Name = @"MOTIVO_NAO_VENDA", Storage = "_MOTIVONAOVENDA", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MOTIVONAOVENDA
        {
            get
            {
                return this._MOTIVONAOVENDA;
            }
            set
            {
                if (this._MOTIVONAOVENDA != value)
                {
                    this.OnMOTIVONAOVENDAChanging(value);
                    this.SendPropertyChanging();
                    this._MOTIVONAOVENDA = value;
                    this.SendPropertyChanged("MOTIVONAOVENDA");
                    this.OnMOTIVONAOVENDAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OBSERVACOES in the schema.
        /// </summary>
        [Column(Storage = "_OBSERVACOES", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string OBSERVACOES
        {
            get
            {
                return this._OBSERVACOES;
            }
            set
            {
                if (this._OBSERVACOES != value)
                {
                    this.OnOBSERVACOESChanging(value);
                    this.SendPropertyChanging();
                    this._OBSERVACOES = value;
                    this.SendPropertyChanged("OBSERVACOES");
                    this.OnOBSERVACOESChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAREAGENDAMENTO in the schema.
        /// </summary>
        [Column(Name = @"DATA_REAGENDAMENTO", Storage = "_DATAREAGENDAMENTO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DATAREAGENDAMENTO
        {
            get
            {
                return this._DATAREAGENDAMENTO;
            }
            set
            {
                if (this._DATAREAGENDAMENTO != value)
                {
                    this.OnDATAREAGENDAMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._DATAREAGENDAMENTO = value;
                    this.SendPropertyChanged("DATAREAGENDAMENTO");
                    this.OnDATAREAGENDAMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"DATA_ATUALIZACAO", Storage = "_DATAATUALIZACAO", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DATAATUALIZACAO
        {
            get
            {
                return this._DATAATUALIZACAO;
            }
            set
            {
                if (this._DATAATUALIZACAO != value)
                {
                    this.OnDATAATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._DATAATUALIZACAO = value;
                    this.SendPropertyChanged("DATAATUALIZACAO");
                    this.OnDATAATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOATUALIZACAO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_ATUALIZACAO", Storage = "_USUARIOATUALIZACAO", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USUARIOATUALIZACAO
        {
            get
            {
                return this._USUARIOATUALIZACAO;
            }
            set
            {
                if (this._USUARIOATUALIZACAO != value)
                {
                    this.OnUSUARIOATUALIZACAOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOATUALIZACAO = value;
                    this.SendPropertyChanged("USUARIOATUALIZACAO");
                    this.OnUSUARIOATUALIZACAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REAGENDAMENTOREALIZADO in the schema.
        /// </summary>
        [Column(Name = @"REAGENDAMENTO_REALIZADO", Storage = "_REAGENDAMENTOREALIZADO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> REAGENDAMENTOREALIZADO
        {
            get
            {
                return this._REAGENDAMENTOREALIZADO;
            }
            set
            {
                if (this._REAGENDAMENTOREALIZADO != value)
                {
                    this.OnREAGENDAMENTOREALIZADOChanging(value);
                    this.SendPropertyChanging();
                    this._REAGENDAMENTOREALIZADO = value;
                    this.SendPropertyChanged("REAGENDAMENTOREALIZADO");
                    this.OnREAGENDAMENTOREALIZADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMAIL in the schema.
        /// </summary>
        [Column(Storage = "_EMAIL", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if (this._EMAIL != value)
                {
                    this.OnEMAILChanging(value);
                    this.SendPropertyChanging();
                    this._EMAIL = value;
                    this.SendPropertyChanged("EMAIL");
                    this.OnEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORBEM in the schema.
        /// </summary>
        [Column(Storage = "_VALORBEM", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> VALORBEM
        {
            get
            {
                return this._VALORBEM;
            }
            set
            {
                if (this._VALORBEM != value)
                {
                    this.OnVALORBEMChanging(value);
                    this.SendPropertyChanging();
                    this._VALORBEM = value;
                    this.SendPropertyChanged("VALORBEM");
                    this.OnVALORBEMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MARCABEM in the schema.
        /// </summary>
        [Column(Storage = "_MARCABEM", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MARCABEM
        {
            get
            {
                return this._MARCABEM;
            }
            set
            {
                if (this._MARCABEM != value)
                {
                    this.OnMARCABEMChanging(value);
                    this.SendPropertyChanging();
                    this._MARCABEM = value;
                    this.SendPropertyChanged("MARCABEM");
                    this.OnMARCABEMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MODELOBEM in the schema.
        /// </summary>
        [Column(Storage = "_MODELOBEM", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MODELOBEM
        {
            get
            {
                return this._MODELOBEM;
            }
            set
            {
                if (this._MODELOBEM != value)
                {
                    this.OnMODELOBEMChanging(value);
                    this.SendPropertyChanging();
                    this._MODELOBEM = value;
                    this.SendPropertyChanged("MODELOBEM");
                    this.OnMODELOBEMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UF in the schema.
        /// </summary>
        [Column(Storage = "_UF", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UF
        {
            get
            {
                return this._UF;
            }
            set
            {
                if (this._UF != value)
                {
                    this.OnUFChanging(value);
                    this.SendPropertyChanging();
                    this._UF = value;
                    this.SendPropertyChanged("UF");
                    this.OnUFChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CIDADE in the schema.
        /// </summary>
        [Column(Storage = "_CIDADE", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CIDADE
        {
            get
            {
                return this._CIDADE;
            }
            set
            {
                if (this._CIDADE != value)
                {
                    this.OnCIDADEChanging(value);
                    this.SendPropertyChanging();
                    this._CIDADE = value;
                    this.SendPropertyChanged("CIDADE");
                    this.OnCIDADEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DDDCELULAR in the schema.
        /// </summary>
        [Column(Storage = "_DDDCELULAR", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DDDCELULAR
        {
            get
            {
                return this._DDDCELULAR;
            }
            set
            {
                if (this._DDDCELULAR != value)
                {
                    this.OnDDDCELULARChanging(value);
                    this.SendPropertyChanging();
                    this._DDDCELULAR = value;
                    this.SendPropertyChanged("DDDCELULAR");
                    this.OnDDDCELULARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CELULAR in the schema.
        /// </summary>
        [Column(Storage = "_CELULAR", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CELULAR
        {
            get
            {
                return this._CELULAR;
            }
            set
            {
                if (this._CELULAR != value)
                {
                    this.OnCELULARChanging(value);
                    this.SendPropertyChanging();
                    this._CELULAR = value;
                    this.SendPropertyChanged("CELULAR");
                    this.OnCELULARChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DDDFONE in the schema.
        /// </summary>
        [Column(Storage = "_DDDFONE", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DDDFONE
        {
            get
            {
                return this._DDDFONE;
            }
            set
            {
                if (this._DDDFONE != value)
                {
                    this.OnDDDFONEChanging(value);
                    this.SendPropertyChanging();
                    this._DDDFONE = value;
                    this.SendPropertyChanged("DDDFONE");
                    this.OnDDDFONEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WHATSAPP in the schema.
        /// </summary>
        [Column(Storage = "_WHATSAPP", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string WHATSAPP
        {
            get
            {
                return this._WHATSAPP;
            }
            set
            {
                if (this._WHATSAPP != value)
                {
                    this.OnWHATSAPPChanging(value);
                    this.SendPropertyChanging();
                    this._WHATSAPP = value;
                    this.SendPropertyChanged("WHATSAPP");
                    this.OnWHATSAPPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ATIVIDADE in the schema.
        /// </summary>
        [Column(Storage = "_ATIVIDADE", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ATIVIDADE
        {
            get
            {
                return this._ATIVIDADE;
            }
            set
            {
                if (this._ATIVIDADE != value)
                {
                    this.OnATIVIDADEChanging(value);
                    this.SendPropertyChanging();
                    this._ATIVIDADE = value;
                    this.SendPropertyChanged("ATIVIDADE");
                    this.OnATIVIDADEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOME in the schema.
        /// </summary>
        [Column(Storage = "_NOME", DbType = "VARCHAR2(32766 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOME
        {
            get
            {
                return this._NOME;
            }
            set
            {
                if (this._NOME != value)
                {
                    this.OnNOMEChanging(value);
                    this.SendPropertyChanging();
                    this._NOME = value;
                    this.SendPropertyChanged("NOME");
                    this.OnNOMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOGRUPO in the schema.
        /// </summary>
        [Column(Name = @"TIPO_GRUPO", Storage = "_TIPOGRUPO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> TIPOGRUPO
        {
            get
            {
                return this._TIPOGRUPO;
            }
            set
            {
                if (this._TIPOGRUPO != value)
                {
                    this.OnTIPOGRUPOChanging(value);
                    this.SendPropertyChanging();
                    this._TIPOGRUPO = value;
                    this.SendPropertyChanged("TIPOGRUPO");
                    this.OnTIPOGRUPOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAINCLUSAO in the schema.
        /// </summary>
        [Column(Storage = "_DATAINCLUSAO", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> DATAINCLUSAO
        {
            get
            {
                return this._DATAINCLUSAO;
            }
            set
            {
                if (this._DATAINCLUSAO != value)
                {
                    this.OnDATAINCLUSAOChanging(value);
                    this.SendPropertyChanging();
                    this._DATAINCLUSAO = value;
                    this.SendPropertyChanged("DATAINCLUSAO");
                    this.OnDATAINCLUSAOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CODGRUPOOUTRO in the schema.
        /// </summary>
        [Column(Name = @"COD_GRUPOOUTRO", Storage = "_CODGRUPOOUTRO", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> CODGRUPOOUTRO
        {
            get
            {
                return this._CODGRUPOOUTRO;
            }
            set
            {
                if (this._CODGRUPOOUTRO != value)
                {
                    this.OnCODGRUPOOUTROChanging(value);
                    this.SendPropertyChanging();
                    this._CODGRUPOOUTRO = value;
                    this.SendPropertyChanged("CODGRUPOOUTRO");
                    this.OnCODGRUPOOUTROChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHECKRESULT in the schema.
        /// </summary>
        [Column(Name = @"CHECK_RESULT", Storage = "_CHECKRESULT", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> CHECKRESULT
        {
            get
            {
                return this._CHECKRESULT;
            }
            set
            {
                if (this._CHECKRESULT != value)
                {
                    this.OnCHECKRESULTChanging(value);
                    this.SendPropertyChanging();
                    this._CHECKRESULT = value;
                    this.SendPropertyChanged("CHECKRESULT");
                    this.OnCHECKRESULTChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
