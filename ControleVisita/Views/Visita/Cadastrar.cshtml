@using ControleVisita.Models.IdentityExtensions
@model ControleVisita.Models.VisitaModel
@{
    ViewBag.Title = "Cadastrar";
}
<script src="~/Scripts/Mascara.js"></script>
<div style="padding-bottom: 20px">
    <a href="@Url.Action("Index","Home")"><img src="~/Content/Imagem/Back Arrow_48px.png" alt="Home" /> </a>
</div>



@using (Html.BeginForm("Cadastrar", "Visita", FormMethod.Post, new { @class = "", @name = "formCadastrar" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()


    <div class="card">
        <div class="card-header"><h4>Cadastrar Visita</h4></div>
        <div class="card-body">


            <div class="form-row">
                @*<div class="form-group col-md-2">
                        @Html.LabelFor(a => a.Id)
                        @Html.DevExtreme().TextBoxFor(m => m.Id).ReadOnly(true).Placeholder("Automático")
                    </div>*@



                <div class="form-group col-md-12">

                    @Html.HiddenFor(a => a.Id)

                    Cliente
                    <div class="input-group">


                        @(Html.DevExtreme().LookupFor(a=>a.IdPessoa).Width("92%")
                .DataSource(ds=>ds.WebApi()
                    .Controller("Clientes")
                    .LoadAction("Get")
                    .LoadMode(DataSourceLoadMode.Processed).Key("IdPessoa")

                )
                .DisplayExpr("NomeCompleto")
                .ValueExpr("IdPessoa")

                .SearchMode(DropDownSearchMode.Contains)
                .SearchEnabled(true))

                        <div class="input-group-append">

                            <a href="@Url.Action("Cadastrar","Clientes", new {@returnUrl = ViewContext.HttpContext.Request.Url.PathAndQuery })" class="btn btn-success"><i class="fas fa-user-plus"></i></a>
                        </div>
                    </div>

                </div>


            </div>

            <div class="form-row">



                <div class="form-group col-md-8">
                    @Html.LabelFor(a => a.MotivoVisita)
                    @(Html.DevExtreme().SelectBoxFor(a=>a.MotivoVisita).NoDataText("Selecione o motivo")

                .DataSource(ds=>ds.WebApi()
                    .RouteName("selectbox")
                    .LoadAction("GetMotivoVisita")
                    .LoadMode(DataSourceLoadMode.Raw)
                )
                .DisplayExpr("Motivo")
                .ValueExpr("Motivo")
                .SearchMode(DropDownSearchMode.Contains)
                .SearchEnabled(true)
                .InputAttr("required",true))
                </div>

                <div class="form-group col-md-4">

                    @Html.LabelFor(a => a.DataVisita)
                    @Html.DevExtreme().DateBoxFor(d => d.DataVisita).Max(DateTime.Now).DisplayFormat("dd/MM/yyyy").InputAttr("required", true)

                </div>


            </div>



            <div class="form-row">


                <div class="form-group col-md-4">


                    @Html.LabelFor(a => a.MotivoNaoVenda)

                    @*@Html.DropDownListFor(a => a.MotivoNaoVenda, ViewBag.Motivos as SelectList, new { @class = "form-control" })*@

                    @(Html.DevExtreme().SelectBoxFor(a => a.MotivoNaoVenda)
                    .ID("cbxMotivo")
                    .DataSource(ds => ds.WebApi()
                        .Controller("MotivoApi").LoadAction("Get")
                        .LoadMode(DataSourceLoadMode.Raw)
                    ).ValueExpr("Motivo")
                    .DisplayExpr("Motivo")

                    .OnValueChanged("onchangeMotivo")
                    .ShowClearButton(true)

                    .Placeholder("Selecione o Motivo"))
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(a => a.Agendamento.DataAgendamento)
                    @Html.DevExtreme().DateBoxFor(a => a.Agendamento.DataAgendamento).DisplayFormat("dd/MM/yyyy")
                </div>


                <div class="form-group col-md-4">
                    @Html.LabelFor(a => a.Percepcao)
                    @(Html.DevExtreme().SelectBoxFor(a => a.Percepcao)

                        .DataSource(new string[]
                        {
                            "Frio",
                            "Morno",
                            "Quente"
                        })
                    )
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-4 form-group">

                    @Html.LabelFor(a => a.BemViewModel.Marca)
                    @(Html.DevExtreme().SelectBoxFor(a=>a.BemViewModel.Marca).ID("cbxMarca")
                    .DataSource(ds=>ds.WebApi().RouteName("selectbox")
                        .LoadAction("GetBems")
                        .LoadParams(new {empresa = @User.Identity.GetEmpresa()})
                        .LoadMode(DataSourceLoadMode.Raw)
                    ).DisplayExpr("Marca")
                    .ValueExpr("Marca")
                    .OnValueChanged("onCbxMarcaValueChanged")
                    .Placeholder("Selecione a marca"))

                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(a => a.BemViewModel.Modelo)
                    @(Html.DevExtreme().SelectBoxFor(a=>a.BemViewModel.Modelo).ID("cbxModelo")
                    .DataSourceOptions(op => op.Paginate(true).PageSize(15))
                    .DataSource(ds=>ds.WebApi().RouteName("selectbox")
                        .LoadAction("GetModelos")
                        .LoadParams(new {empresa = @User.Identity.GetEmpresa()})
                        .LoadMode(DataSourceLoadMode.Raw)
                    ).DisplayExpr("Modelo")
                    .ValueExpr("Modelo")
                    .Placeholder("Selecione o Modelo"))
                    @*@Html.LabelFor(a => a.BemViewModel.Modelo)
                        @Html.DevExtreme().TextBoxFor(a => a.BemViewModel.Modelo)*@
                </div>



                <div class="form-group col-md-4">
                    @Html.LabelFor(a => a.ValorBem):
                    @Html.DevExtreme().TextBoxFor(a => a.ValorBemAux).InputAttr("class", "money")
                </div>

            </div>

            <div class="form-row">

                <div class="form-group col-md-12">
                    @Html.LabelFor(a => a.HistoricoVisita)
                    @Html.DevExtreme().TextAreaFor(a => a.HistoricoVisita).MaxLength(4000).Placeholder("Informações sobre a visita ou sobre o cliente...")

                </div>
            </div>

            <button class="btn btn-primary" onclick="onSubmit" id="btnSalvar" name="salvar">Salvar</button>

            @Html.ActionLink("Cancelar", "Index", "Home")
        </div>
    </div>
}

<br />




<div class="card">
    <div class="card-header"><h4>Cadastros realizados hoje</h4></div>
    <div class="card-body">
        @Html.Partial("GridVisita")
    </div>
</div>


<script>


    $(document).ready(function() {

        var error = "@ViewBag.Error";

        //$("#Agendamento_DataAgendamento").prop('required', true);

        //console.log(error);

        if (error.length > 0) {

            DevExpress.ui.notify(GetMsg(error), GetTypeMsg(error), 3000);
        };

         $('.money').mask('000.000.000.000.000,00', { reverse: true});

    });


    function GetMsg(msg) {

        switch (msg.split('|')[0]) {
            case '0':
                return "Cadastro Realizado com sucesso";
            case '1':
                return "Preencha os campos obrigatórios";

            default :
                return msg.split('|')[0];
            }
    };

    function GetTypeMsg(msg) {

        return msg.split('|')[1];
    }

    //$("#formCadastrar").submit(function (event) {
    //    $('.money').;
    //});



    function Cidade(e) {

        $("#Endereco_Cidade").val("");

        $("#dxCidade").dxSelectBox("instance").getDataSource().filter(["ESTADO", "=", e.value]);
        $("#dxCidade").dxSelectBox("instance").getDataSource().reload();
    }

    function onCbxMarcaValueChanged(e) {

        $("#BemViewModel_Modelo").val("");

        $("#cbxModelo").dxSelectBox("instance").getDataSource().filter(["Marca", "=", e.value]);
        $("#cbxModelo").dxSelectBox("instance").getDataSource().reload();
    }

    function onchangeMotivo(e) {



        console.log(e.value);

        if (e.value === "SEM INTERESSE") {
            $("#Agendamento_DataAgendamento").prop('required', false);
            $("#HistoricoVisita").prop('required', false);
        }

        //else if (e.value === "COMPARANDO COM A CONCORRÊNCIA") {
        //    $("#Agendamento_DataAgendamento").prop('required', true);
        //}

        else if (e.value === "AVALIANDO PROPOSTA") {
            $("#Agendamento_DataAgendamento").prop('required', true);
        }
        else if (e.value === "SOLICITOU CONTATO FUTURO") {
            $("#Agendamento_DataAgendamento").prop('required', true);
        }
        else if (e.value === "NÃO ATENDEU") {
            $("#Agendamento_DataAgendamento").prop('required', true);
        }
        else if (e.value === "OUTROS") {
            $("#Agendamento_DataAgendamento").prop('required', true);
            $("#HistoricoVisita").prop('required', true);
        }
        else if (e.value === "OUTROS") {
            $("#Agendamento_DataAgendamento").prop('required', true);
            $("#HistoricoVisita").prop('required', true);
        }

        else if (e.value === "OUTROS") {
            $("#Agendamento_DataAgendamento").prop('required', true);
            $("#HistoricoVisita").prop('required', true);
        }

        else if (e.value === "JÁ TEM COTA DE OUTRA ADMINISTRADORA") {
            $("#Agendamento_DataAgendamento").prop('required', false);
            $("#HistoricoVisita").prop('required', true);

        } else {
            $("#Agendamento_DataAgendamento").prop('required', false);
            $("#HistoricoVisita").prop('required', false);


        }

    }

    function onSubmit() {

        console.log($('#Agendamento_DataAgendamento').val());

        if ($('#Agendamento_DataAgendamento').val() == null)
            alert('Você não está reagendando a visita ela será cadastra e finalizada');
    }



</script>
